{"version":3,"sources":["pages/Home/Home.module.scss","components/Header/Header.module.scss","components/Footer/Footer.module.scss","components/CreatePost/CreatePost.module.scss","pages/Friends/Friends.module.scss","components/Post/Post.module.scss","components/FriendPreview/FriendPreview.module.scss","components/MessagePreview/MessagePreview.module.scss","components/Header/index.jsx","components/Footer/index.jsx","libs/http.js","components/CreatePost/index.jsx","pages/NewPost/index.jsx","pages/Messages/index.jsx","components/CreateFriend/index.jsx","components/FriendPreview/index.jsx","pages/Friends/index.jsx","components/CreateDate/index.jsx","components/MessagePreview/index.jsx","components/Post/index.jsx","pages/Home/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Header","props","name","links","link","label","CheckActive","resolved","useResolvedPath","useMatch","path","pathname","end","styles","active","className","header","map","item","index","to","Footer","year","Date","getFullYear","footer","BASE_URL","http","resource","fetch","then","response","json","httpPOST","data","method","headers","body","JSON","stringify","CreatePost","useState","authorInput","setAuthorInput","imgInput","setImgInput","messageInput","setMessageInput","formPostObj","setFormPostObj","useEffect","author","text","date","toISOString","photo","createPost","__author","value","onChange","e","target","id","type","placeholder","required","onClick","event","preventDefault","alert","cols","rows","NewPost","Messages","CreateFriend","friendName","setFriendName","friendPhoto","setFriendPhoto","createFriend","__friend","FriendPreview","friend","src","alt","Friends","friendsList","setFriendsList","__friendsList","CreateDate","formatRelative","locale","it","MessagePreview","sender","message","Post","post","window","location","href","deleteBtn","friends","messages","posts","Home","friendsPreview","setFriendPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","reverse","home","grid","createPostBtn","INIT_STATE","nav","reducer","state","action","App","useReducer","dispatch","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.39328cde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1v0yI\",\"active\":\"Header_active__3GX0s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__7dIj9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"createPost\":\"CreatePost_createPost__3XCbM\",\"__author\":\"CreatePost___author__2lcbm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Friends\":\"Friends_Friends__2IY9Z\",\"__friendsList\":\"Friends___friendsList__319r6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\",\"deleteBtn\":\"Post_deleteBtn__1bIB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","\nimport { Link, useMatch, useResolvedPath } from 'react-router-dom';\nimport styles from \"./../Header/Header.module.scss\";\n\nconst Header = (props) => {\n    const name = props.name || 'App';\n    const links = props.links || [{ link: \"\", label: \"Link\"}];\n\nconst CheckActive = (link) => {\n  const resolved = useResolvedPath(link);\n\n  const match = useMatch ({ path: resolved.pathname, end: true });\n\n  return match ? styles.active : \"\";\n}\n\n  return (\n    <header className={styles.header}>\n      <h1>{name}</h1>\n      <nav>\n        <ul>\n          {links.map((item, index) => (\n            <li key={index}>\n              <Link className={CheckActive(item.link)} to={item.link}>{item.label}</Link>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default Header;\n","import styles from './Footer.module.scss';\n\nconst Footer = () => {\n\nconst year = new Date().getFullYear();\n\n    return (\n        <footer className={styles.footer}>\n            <hr />\n            <p className={styles} >Copyright Edgemony {year}</p>\n        </footer>\n    )\n}\n\nexport default Footer;","\nconst BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) =>\n  fetch(BASE_URL + resource).then((response) => response.json());\n\nconst httpPOST = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDELETE = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\n// Popola la lista degli amici, in base alla lista friendsNames\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPOST(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => {}, 100);\n  }\n};\n\nexport { http, httpPOST, httpDELETE, fillFriendsList };","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport styles from \"./CreatePost.module.scss\";\n\nconst CreatePost = () => {\n  const [authorInput, setAuthorInput] = useState(\"\");\n  const [imgInput, setImgInput] = useState(\"\");\n  const [messageInput, setMessageInput] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/posts\", formPostObj);\n    alert(\"Il post è stato creato!\");\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      author: authorInput,\n      text: messageInput,\n      date: new Date().toISOString(),\n      photo: imgInput,\n    });\n  }, [authorInput, imgInput, messageInput]);\n\n  return (\n    <div className={styles.createPost}>\n      <form>\n        <div className={styles.__author}>\n          <input\n            value={authorInput}\n            onChange={(e) => setAuthorInput(e.target.value)}\n            name=\"author\"\n            id=\"author\"\n            type=\"text\"\n            placeholder=\"Author\"\n            required\n          />\n\n          <input\n            onChange={(e) => setImgInput(e.target.value)}\n            value={imgInput}\n            name=\"img\"\n            id=\"img\"\n            type=\"text\"\n            placeholder=\"Img URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            SEND\n          </button>\n        </div>\n\n        <textarea\n          value={messageInput}\n          onChange={(e) => setMessageInput(e.target.value)}\n          name=\"message\"\n          id=\"message\"\n          cols=\"30\"\n          rows=\"10\"\n          placeholder=\"Message\"\n          required\n        ></textarea>\n      </form>\n    </div>\n  );\n};\n\nexport default CreatePost;","import CreatePost from \"../../components/CreatePost\";\n\nconst NewPost = () => {\n  return <CreatePost />;\n};\n\nexport default NewPost;","// import { useState, useEffect } from \"react\";\n// import styles from \"./Messages.module.scss\";\n\nconst Messages = () => {\n    return <h1>Messagesssss</h1>;\n  };\n  \n  export default Messages;","import { useState, useEffect } from \"react\";\nimport { httpPOST } from \"../../libs/http\";\nimport styles from \"./CreateFriend.module.scss\";\n\nconst CreateFriend = () => {\n  const [friendName, setFriendName] = useState(\"\");\n  const [friendPhoto, setFriendPhoto] = useState(\"\");\n  const [formPostObj, setFormPostObj] = useState({});\n\n  const handleSendBtn = (event) => {\n    event.preventDefault();\n    httpPOST(\"/friends\", formPostObj);\n    alert(\"L'amico è stato aggiunto\");\n  };\n\n  useEffect(() => {\n    setFormPostObj({\n      name: friendName,\n      photo: friendPhoto,\n    });\n  }, [friendName, friendPhoto]);\n\n  return (\n    <div className={styles.createFriend}>\n      <form>\n        <div className={styles.__friend}>\n          <input\n            value={friendName}\n            onChange={(e) => setFriendName(e.target.value)}\n            name=\"friend\"\n            id=\"friend\"\n            type=\"text\"\n            placeholder=\"Friend name\"\n            required\n          />\n\n          <input\n            onChange={(e) => setFriendPhoto(e.target.value)}\n            value={friendPhoto}\n            name=\"photo\"\n            id=\"photo\"\n            type=\"text\"\n            placeholder=\"Photo URL\"\n          />\n\n          <button type=\"submit\" onClick={handleSendBtn}>\n            ADD\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default CreateFriend;","import styles from \"./FriendPreview.module.scss\";\n\nconst FriendPreview = (props) => {\n  const data = props.data || {\n    name: \"Friend\",\n    photo: \"https://randomuser.me/api/portraits/women/59.jpg\",\n  };\n\n  return (\n    <div className={styles.friend}>\n      <img src={data.photo} alt={data.name} />\n      <p>{data.name}</p>\n    </div>\n  );\n};\n\nexport { FriendPreview };\n","import { useState, useEffect } from \"react\";\nimport CreateFriend from \"../../components/CreateFriend\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\n// import Pagination from \"./../../components/Pagination\";\nimport { http } from \"../../libs/http\";\nimport styles from \"./Friends.module.scss\";\n\nconst Friends = () => {\n  const [friendsList, setFriendsList] = useState([]);\n  // const [pagination, setPagination] = useState(1);\n\n  useEffect(() => {\n    http(`/friends?_page=1`).then((friendsList) => setFriendsList(friendsList));\n  }, []);\n\n  return (\n    <div className={styles.Friends}>\n      <CreateFriend />\n\n      {/* <div>\n        <Pagination />\n      </div> */}\n\n      <div className={styles.__friendsList}>\n        {friendsList.map((friend) => (\n          <FriendPreview data={friend} key={friend.id} />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Friends;","import { formatRelative } from \"date-fns\";\nimport { it } from 'date-fns/locale';\n\nconst CreateDate = (props) => {\n  const data = props.data || {\n    date: new Date(),\n  };\n\n  return (\n    <p>\n      <small>\n        {formatRelative(new Date(data.date), new Date(), {\n          locale: it,\n        })}\n      </small>\n    </p>\n  );\n};\n\nexport { CreateDate };\n","\nimport { CreateDate } from \"./../CreateDate\";\nimport styles from \"./MessagePreview.module.scss\";\n\nconst MessagePreview = (props) => {\n  const data = props.data || {\n    text: \"lorem ipsum\",\n    date: new Date(),\n    sender: \"User\",\n  };\n\n\n\n  return (\n    <div className={styles.message}>\n      <h5>{data.sender}</h5>\n      <CreateDate data={data} />\n      <p>{data.text}</p>\n    </div>\n  );\n};\n\nexport { MessagePreview };","import { CreateDate } from \"./../CreateDate\";\nimport { httpDELETE } from \"../../libs/http\";\nimport styles from \"./Post.module.scss\";\n\nconst Post = (props) => {\n  const data = props.data || {\n    author: \"User\",\n    text: \"text\",\n    date: new Date(),\n    photo:\n      \"https://images.unsplash.com/photo-1639512398860-be15f48100ea?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1024&q=80\",\n  };\n\n  const handleDeletePost = () => {\n    httpDELETE(`/posts/${props.data.id}`).then(() => {});\n    alert(`Post by ${props.data.author} was deleted`);\n    window.location.href = \"/\";\n  };\n\n  return (\n    <article className={styles.post}>\n      <button onClick={handleDeletePost} className={styles.deleteBtn}>\n        X\n      </button>\n\n      <h3>{data.author}</h3>\n      <CreateDate data={data} />\n      <p>{data.text}</p>\n\n      {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n      {/* hasImage(data.photo) */}\n    </article>\n  );\n};\n\nexport { Post };\n","import { useEffect, useState } from \"react\";\nimport { FriendPreview } from \"../../components/FriendPreview\";\nimport { MessagePreview } from \"../../components/MessagePreview\";\nimport { Post } from \"../../components/Post\";\nimport { http } from \"./../../libs/http\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"./Home.module.scss\";\n\nconst friends = [];\n\nconst messages = [];\n\nconst posts = [];\n\nconst Home = () => {\n  const [friendsPreview, setFriendPreview] = useState(friends);\n  const [allPosts, setAllPosts] = useState(posts);\n  const [messagesPreview, setMessagesPreview] = useState(messages);\n\n  // GETTER -> const friendsPreview = [];\n  // SETTER -> friendsPreview = [...];\n\n  // Esegui del codice quando il componente è inizializzato (montato in pagina)\n  // componentiDidMOunt() --> simile a \"DOMContentLoaded\" ma solo per il componente\n\n  useEffect(() => {\n    http(\"friends?_limit=4\").then((data) => setFriendPreview(data));\n\n    http(\"posts\").then((data) => setAllPosts(data.reverse()));\n\n    http(\"messages?_limit=4\").then((data) => setMessagesPreview(data));\n\n    // fetch('https://edgemony-backend.herokuapp.com/posts')\n    // .then((res) => res.json())\n    // .then((data) => setAllPosts(data));\n  }, []);\n\n  return (\n    <section className={styles.home}>\n      <h3>Bevenuto utente</h3>\n      <div className={styles.grid}>\n        <aside>\n          {friendsPreview.map((friend, index) => (\n            <FriendPreview key={index} data={friend} />\n          ))}\n        </aside>\n        <main>\n          <Link to=\"/new-post\">\n            <button className={styles.createPostBtn}>\n              + Create a new post!\n            </button>\n          </Link>\n          {allPosts.map((post, index) => (\n            <Post key={index} data={post} />\n          ))}\n        </main>\n        <aside>\n          {messagesPreview.map((message, index) => (\n            <MessagePreview key={index} data={message} />\n          ))}\n        </aside>\n      </div>\n    </section>\n  );\n};\n\nexport default Home;\n","import { useReducer } from \"react\";\nimport { Routes, Route } from \"react-router-dom\";\n\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport NewPost from \"./pages/NewPost\";\nimport Messages from \"./pages/Messages\";\nimport Friends from \"./pages/Friends\";\n\n\nimport Home from \"./pages/Home\";\n\nconst INIT_STATE = {\n  name: \"Feisbrut\",\n  nav: [\n    { link: \"/\", label: \"Home\" },\n    { link: \"/messages\", label: \"Messages\" },\n    { link: \"/friends\", label: \"Friends\" },\n  ],\n  friendsPreview: [],\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"change-name\":\n      return { ...state, name: \"Feisbell\" };\n    default:\n      return state;\n  }\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, INIT_STATE);\n\n  return (\n    <div>\n      <Header name={state.name} links={state.nav} />\n\n      <button onClick={() => dispatch({ type: \"change-name\" })}>\n        Cambia nome\n      </button>\n\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/new-post\" element={<NewPost />} />\n        <Route path=\"/messages\" element={<Messages />} />\n        <Route path=\"/friends\" element={<Friends />} />\n      </Routes>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n    <App />\n    </Router>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}